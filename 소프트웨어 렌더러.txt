소프트웨어 렌더러 

Resource.h - 윈도우의 리소스(메뉴, 대화상자)의 ID를 정의하는 헤더파일 (무시)
Targetver.h - 응용프로그램의 플랫폼 정의하는 헤더 (그대로 사용)
framework.h(stdafx.h 로 변경) - 표준 시스템 포함 파일 또는 특정 포함 파일들을 포함하는 파일(나중에 여기에 Direct3D 12헤더파일 추가)
LabProject00.h - 리소스와 관련된 사용자 헤더 파일 포함 (그대로 사용) 
LapProject00.cpp - 프로그램의 소스 코드를 포함하는 파일, 이 파일을 수정하여 프로그램의 골격을 완성

일반적인 윈도우 응용 프로그램이 되기 위해서는 다음의 기본적인 일을 처리해야 함

1) 윈도우 클래스를 시스템에 등록

윈도우 클래스는 윈도우의 특성/모양(Class Style)과 동작 방식(Window Procedure)을 나타 낸다. 
윈도우 클래스를 만들어 윈도우 시스템에 등록을 하면 그 클래스의 윈도우를 생성할 수 있다. 
그러므로 응용 프로그램에서 생성할 윈도우가 속하는 윈도우 클래스가 윈도우 시스템에 존재하지 않으면 반드시 새로운 윈도우 클래스를 윈도우 시스템에 등록해야 한다. 
윈도우 클래스의 윈도우 프로시져는 윈도우 클래스에 속하는 모든 윈도우가 윈도우 메시지를 어떻게 처 리하는 가를 나타내는 함수이다. 
일반적으로 윈도우 응용 프로그램이 실행되면 응용 프로그램 을 대표하는 주 윈도우(Main Window)가 나타나고 이 윈도우의 모양과 동작 방식은 다른 응용 프로그램과 차별화되어야 한다. 
적어도 윈도우 프로시져는 달라야 할 것이다. 
그러므로 윈도우 응용 프로그램은 최소한 주 윈도우가 속하는 윈도우 클래스를 시스템에 등록해야 한다. 
윈도우 클래스를 등록하기 위한 윈도우 API 함수는 RegisterClassEx()이다.


WNDCLASSEXW는 Windows API에서 사용되는 구조체(structure)로, 윈도우 프로그래밍에서 윈도우 클래스(Window Class)를 등록할 때 사용됩니다.

WNDCLASSEXW 구조체는 다음과 같은 멤버들을 가지고 있습니다:

cbSize: 구조체의 크기를 바이트 단위로 지정합니다.
style: 윈도우 클래스의 스타일을 지정합니다.
lpfnWndProc: 윈도우 프로시저 함수의 포인터를 지정합니다.
cbClsExtra: 윈도우 클래스의 추가 바이트를 지정합니다.
cbWndExtra: 윈도우 인스턴스의 추가 바이트를 지정합니다.
hInstance: 윈도우 클래스가 속한 모듈의 핸들을 지정합니다.
hIcon: 윈도우 클래스에 사용할 아이콘 핸들을 지정합니다.
hCursor: 윈도우 클래스에 사용할 커서 핸들을 지정합니다.
hbrBackground: 윈도우 클래스에 사용할 배경 브러시 핸들을 지정합니다.
lpszMenuName: 윈도우 클래스가 사용할 메뉴의 이름을 지정합니다.
lpszClassName: 윈도우 클래스의 이름을 지정합니다.
hIconSm: 작은 아이콘 핸들을 지정합니다.
WNDCLASSEXW 구조체를 사용하여 윈도우 클래스를 등록할 때는, 우선 구조체를 초기화한 후, RegisterClassExW 함수를 호출하여 등록합니다. 등록된 윈도우 클래스는 CreateWindowExW 함수를 호출하여 윈도우를 생성할 때 사용됩니다.

2) 응용 프로그램 초기화 및 주 윈도우 생성

3) 메시지 루프
다음의 코드는 응용 프로그램의 메시지 큐에서 메시지를 가져와서(GetMessage) 메시지를 해 당 윈도우에게 전달하는(DispatchMessage) 메시지 루프를 나타낸다. 
GetMessage() API 함수 가  FALSE를  반환하는  경우는  메시지  큐에서  가져온  메시지가  WM_QUIT  메시지일  때이다. WM_QUIT  메시지는  응용  프로그램을  종료하는  경우에  발생한다.  
다른  메시지의  경우에는 TRUE를 반환한다. 그러므로 다음의 메시지 루프는 WM_QUIT 메시지를 처리할 때까지 계속 반복하여 실행될 것이다. 

윈도우 프로시져
다음은 윈도우 클래스를 등록할 때 설정한 윈도우 프로시져 함수이다. 
이 함수는 주 윈도우가 처리해야  하는  윈도우  메시지가  주  윈도우에게  전달될  때  호출되는  메시지  처리  함수이다. 
즉, 메시지 루프에서 DispatchMessage() 윈도우 API 함수를 호출하면 WndProc() 함수가 실행된다. 
윈도우 프로시져는 메시지를 나타내는 4개의 파라메터(윈도우 핸들, 메시지 ID, 2개의 파라메터)를 매개변수를 가진다.


